cmake_minimum_required(VERSION 3.12)
project(fragment-cloud)

if(BUILD_TESTS)
    include(CTest)

    set(CMAKE_CXX_STANDARD 17)

    if(CMAKE_BUILD_TYPE MATCHES Debug)
        message("Compling with debug flags")
    else()
        message("Release mode => compling with assertions off and -O3 to improve performance")
        add_compile_options ( -DNDEBUG -O3 )
    endif()

    # Generate position-independent code [https://stackoverflow.com/questions/5311515/gcc-fpic-option]
    message("Adding -fPIC compile option")
    add_compile_options ( -fPIC )
endif()

find_package(Python3 3.7 REQUIRED COMPONENTS Interpreter Development NumPy)
message(STATUS "Python3_EXECUTABLE = ${Python3_EXECUTABLE}")
message(STATUS "Python3_VERSION = ${Python3_VERSION}")
message(STATUS "Python3_LIBRARIES = ${Python3_LIBRARIES}")
message(STATUS "Python3_INCLUDE_DIRS = ${Python3_INCLUDE_DIRS}")
message(STATUS "Python3_NumPy_INCLUDE_DIRS = ${Python3_NumPy_INCLUDE_DIRS}")

set(Boost_USE_MULTITHREADED ON)
if(Python3_VERSION_MINOR EQUAL 7)
    find_package(Boost 1.70 REQUIRED COMPONENTS python37 numpy37 unit_test_framework)
    set(boost_python_library ${Boost_PYTHON37_LIBRARY_RELEASE})
    set(boost_numpy_library ${Boost_NUMPY37_LIBRARY_RELEASE})
    function(link_python target)
        target_link_libraries(${target} ${Python3_LIBRARIES} Boost::python37 Boost::numpy37)
    endfunction()
elseif(Python3_VERSION_MINOR EQUAL 8)
    find_package(Boost 1.70 REQUIRED COMPONENTS python38 numpy38 unit_test_framework)
    set(boost_python_library ${Boost_PYTHON38_LIBRARY_RELEASE})
    set(boost_numpy_library ${Boost_NUMPY38_LIBRARY_RELEASE})
    function(link_python target)
        target_link_libraries(${target} ${Python3_LIBRARIES} Boost::python38 Boost::numpy38)
    endfunction()
elseif(Python3_VERSION_MINOR EQUAL 9)
    find_package(Boost 1.70 REQUIRED COMPONENTS python39 numpy39 unit_test_framework)
    set(boost_python_library ${Boost_PYTHON39_LIBRARY_RELEASE})
    set(boost_numpy_library ${Boost_NUMPY39_LIBRARY_RELEASE})
    function(link_python target)
        target_link_libraries(${target} ${Python3_LIBRARIES} Boost::python39 Boost::numpy39)
    endfunction()
else()
    message(FATAL_ERROR "Python version ${Python3_VERSION} found, which is not supported. Only supporting versions 3.7 - 3.9")
endif()

message(STATUS "Boost_INCLUDE_DIRS = ${Boost_INCLUDE_DIRS}")
message(STATUS "boost_python_library = ${boost_python_library}")
message(STATUS "boost_numpy_library = ${boost_numpy_library}")

if (BUILD_TESTS)
    include_directories(include)
    include_directories(${Boost_INCLUDE_DIRS})
    include_directories(${Python3_INCLUDE_DIRS} ${Python3_NumPy_INCLUDE_DIRS})
    add_subdirectory(src)
    add_subdirectory(tests)
endif()

string(FIND ${boost_python_library} "boost_python" start1)
string(FIND ${boost_python_library} "." end1)
math(EXPR length1 "${end1}-${start1}")
string(SUBSTRING ${boost_python_library} ${start1} ${length1} boost_python_lib_name)

string(FIND ${boost_numpy_library} "boost_numpy" start2)
string(FIND ${boost_numpy_library} "." end2)
math(EXPR length2 "${end2}-${start2}")
string(SUBSTRING ${boost_numpy_library} ${start2} ${length2} boost_numpy_lib_name)

message(STATUS "boost_python_lib_name = ${boost_python_lib_name}")
message(STATUS "boost_numpy_lib_name = ${boost_numpy_lib_name}")

configure_file(setup.py.in ../setup.py @ONLY)
