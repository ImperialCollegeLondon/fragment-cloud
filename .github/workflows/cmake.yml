name: Build with CMAKE and run unit tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  BOOST_VER: 1.71
  PYTHON_VER: 3.8

jobs:
  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Python ${{ env.PYTHON_VER }}
      uses: actions/setup-python@v2.2.2
      with:
        # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        python-version: '${{ env.PYTHON_VER }}'
        architecture: x64
        
    - name: Install Python packages
      run: pip install -r requirements.txt
      
    - name: Download and install Boost
      run: sudo apt-get libboost-all-dev

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/debug -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=1
        cmake -B ${{github.workspace}}/release -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=1

    - name: Build C++ tests
      run: |
        cmake --build ${{github.workspace}}/debug --config Debug
        cmake --build ${{github.workspace}}/release --config Release

    - name: Run C++ unit tests in Debug mode
      working-directory: ${{github.workspace}}/debug
      run: ctest -C Debug
      
    - name: Run C++ tests in Release mode
      working-directory: ${{github.workspace}}/release
      run: ctest -C Release
      
    - name: Build python package
      run: python setup.py install
    
    - name: Run Python unit tests
      run: python -m pytest tests/python/*_tests.py
    
